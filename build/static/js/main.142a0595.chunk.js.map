{"version":3,"sources":["components/Rooms/Room/Room.module.css","components/Layout/MainNav/MainNav.module.css","containers/CreateRoom/CreateRoom.module.css","components/Rooms/RoomNav/RoomNav.module.css","components/Home/About/About.module.css","containers/Profile/Profile.module.css","containers/StatusMessages/StatusMessage/StatusMessage.module.css","containers/CreateRoom/RoomIconList/RoomIconList.module.css","components/Profile/IconList/IconList.module.css","components/Rooms/RoomNav/RoomCard/RoomCard.module.css","assets/images/add-icon.svg","assets/images/send-icon.svg","components/OnlineList/OnlineList.module.css","components/OnlineList/OnlineCards/OnlineCard/OnlineCard.module.css","components/Backdrop/Backdrop.module.css","containers/Rooms/Rooms.module.css","containers/JoiningRoom/JoiningRoom.module.css","assets/images/nate-profile.png","components/Home/HomeInfo/HomeInfo.module.css","assets/images/home-graphic.png","containers/StatusMessages/StatusMessages.module.css","components/Layout/MainNav/MainNav.js","components/Layout/Layout.js","components/Rooms/RoomNav/RoomCard/RoomCard.js","components/Rooms/RoomNav/RoomNav.js","components/Rooms/Room/Message/Message.js","components/Rooms/Room/Room.js","components/OnlineList/OnlineCards/OnlineCard/OnlineCard.js","components/OnlineList/OnlineCards/OnlineCards.js","components/OnlineList/OnlineList.js","components/Backdrop/Backdrop.js","containers/CreateRoom/RoomIconList/RoomIconList.js","containers/CreateRoom/CreateRoom.js","containers/JoiningRoom/JoiningRoom.js","containers/Rooms/Rooms.js","components/Home/About/About.js","components/Home/HomeInfo/HomeInfo.js","components/Home/Home.js","components/Profile/IconList/IconList.js","containers/Profile/Profile.js","containers/StatusMessages/StatusMessage/StatusMessage.js","containers/StatusMessages/StatusMessages.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","MainNav","props","className","classes","Nav","activeClassName","selected","to","id","Link","icon","themeToggle","title","onClick","toggleTheme","Layout","Fragment","click","this","children","Component","connect","state","connectRoom","room","activeClass","roomID","roomName","RoomCard","key","clicked","numberOnline","private","hasSheild","rooms","socket","useState","isSectionPublic","setIsSectionPublic","publicRooms","privateRooms","filter","item","publicRoomsList","privateRoomsList","toggleSections","joinRoom","emit","joinRoomHandler","map","privateInfoMsg","RoomNav","addButton","createRoomHandler","src","alt","roomType","roomsList","roomsListElement","ReloadIcon","message","isUser","messageIsUsers","onMouseOut","event","currentTarget","parentNode","lastChild","onMouseOver","opacityZero","user","time","msgs","messages","msgList","msg","Message","centerInstructions","useEffect","scrollToRef","myRef","ref","current","scrollIntoView","behavior","useRef","RoomHeader","leaveButton","RoomList","BottomAnchor","onSubmit","preventDefault","text","value","trim","form","type","placeholder","sendIcon","Room","OnlineCard","name","inSameRoom","inRoom","users","otherUsers","Math","random","hiddenUsers","OnlineList","Backdrop","listOfIcons","RoomIconList","elementList","isSelected","RoomIconListActive","select","setName","password","setPassword","isPrivate","setIsPrivate","selectedIcon","setSelectedIcon","passwordRef","selectButton","disabled","CreateRoom","ClosePopup","e","CreateRoomInfo","CreateRoomInput","controls","disabledText","onChange","substr","buttons","createRoom","newRoom","console","log","JoiningRoom","newPassword","creatingRoom","setCreatingRoom","joiningRoom","setJoiningRoom","roomToJoin","setRoomToJoin","on","Rooms","About","section","info","nateProfile","draggable","links","href","Home","HomeInfo","homeGraphic","path","match","url","exact","component","IconList","icons","iconName","active","Icon","visable","isVisable","isVisableValue","localStorage","getItem","originalName","originalIcon","originalVisable","setIcon","changing","setChanging","setVisable","updateVisable","onProfileChange","newName","newIcon","newVisable","Profile","editProfile","Icons","buttonOpacity","dispatch","removeStatusMessage","statusMessage","colorClass","status","error","success","update","contentCancelTransition","setTimeout","clearInterval","StatusMessage","desc","statusMessages","StatusMessages","updateSocket","updateUsers","updateCurrentUser","updateRooms","updateCurrentRoom","addMessage","clearMessages","leaveRoom","addStatusMessage","currentTheme","setTheme","updateProfile","newUser","io","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","statusMsg","setItem","disconnect","render","from","Boolean","window","location","hostname","initialState","reducer","action","newUsers","updatedMessages","push","emptyArray","library","add","faHome","faComments","faUserCog","faMoon","faUsers","faLock","faShieldAlt","faIcons","faGamepad","faBook","faSignOutAlt","faGithub","faInstagram","faGlobeAmericas","faUserCircle","faUserSecret","faUserAstronaut","faUserGraduate","faUserNinja","faAngry","faUserTie","faMeh","faPoo","faFrown","faSync","faDoorOpen","faCheck","faBell","faTimes","faKey","faCoffee","faCouch","faCode","faChessRook","faStar","faBiohazard","faDoorClosed","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.142a0595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Room\":\"Room_Room__1zXI-\",\"centerInstructions\":\"Room_centerInstructions__3U8cI\",\"RoomList\":\"Room_RoomList__F2UT9\",\"RoomHeader\":\"Room_RoomHeader__14aQ5\",\"messageIsUsers\":\"Room_messageIsUsers__2HLsG\",\"form\":\"Room_form__3pPci\",\"opacityZero\":\"Room_opacityZero__398_O\",\"leaveButton\":\"Room_leaveButton__1WH_m\",\"BottomAnchor\":\"Room_BottomAnchor__3sF71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"MainNav_Nav___C55w\",\"selected\":\"MainNav_selected__3uRxe\",\"Link\":\"MainNav_Link__2v1Wd\",\"themeToggle\":\"MainNav_themeToggle__2pH9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateRoom\":\"CreateRoom_CreateRoom__CzX-a\",\"animateIn\":\"CreateRoom_animateIn__12OwB\",\"CreateRoomInfo\":\"CreateRoom_CreateRoomInfo__3CRPM\",\"CreateRoomInput\":\"CreateRoom_CreateRoomInput__3Uns0\",\"controls\":\"CreateRoom_controls__1RxTm\",\"disabledText\":\"CreateRoom_disabledText__vPe3F\",\"createRoom\":\"CreateRoom_createRoom__voavj\",\"buttons\":\"CreateRoom_buttons__3bfCZ\",\"ClosePopup\":\"CreateRoom_ClosePopup__5TFGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoomNav\":\"RoomNav_RoomNav__29SLZ\",\"roomType\":\"RoomNav_roomType__CYwLM\",\"roomsList\":\"RoomNav_roomsList__1MGsJ\",\"roomsListElement\":\"RoomNav_roomsListElement__1iaxU\",\"ReloadIcon\":\"RoomNav_ReloadIcon__2gPeX\",\"privateInfoMsg\":\"RoomNav_privateInfoMsg__2GjOd\",\"addButton\":\"RoomNav_addButton__PvZXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"About_About__2o60y\",\"section\":\"About_section__EmVLQ\",\"info\":\"About_info__1ly3E\",\"links\":\"About_links__381Rr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__2vSJb\",\"editProfile\":\"Profile_editProfile__3Kuke\",\"buttonOpacity\":\"Profile_buttonOpacity__sZ-xU\",\"opacity\":\"Profile_opacity__2BOMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatusMessage\":\"StatusMessage_StatusMessage__VHDTl\",\"animateInandOut\":\"StatusMessage_animateInandOut__1ynrM\",\"ActiveMessage\":\"StatusMessage_ActiveMessage__3URUf\",\"error\":\"StatusMessage_error__2SQIu\",\"update\":\"StatusMessage_update__2pBJR\",\"success\":\"StatusMessage_success__1yBwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoomIconList\":\"RoomIconList_RoomIconList__3dIqq\",\"RoomIconListActive\":\"RoomIconList_RoomIconListActive__33d_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"IconList_Icon__2s6U-\",\"active\":\"IconList_active__2XwhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoomCard\":\"RoomCard_RoomCard__3T7y2\"};","module.exports = __webpack_public_path__ + \"static/media/add-icon.7decaf06.svg\";","module.exports = __webpack_public_path__ + \"static/media/send-icon.313f1b71.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OnlineList\":\"OnlineList_OnlineList__1Fn-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inRoom\":\"OnlineCard_inRoom__3HHIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2O1l9\",\"animateIn\":\"Backdrop_animateIn__1H1oq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rooms\":\"Rooms_Rooms__2KIGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"JoiningRoom\":\"JoiningRoom_JoiningRoom__hql7K\",\"animateIn\":\"JoiningRoom_animateIn__1BLOr\"};","module.exports = __webpack_public_path__ + \"static/media/nate-profile.180800f1.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeInfo\":\"HomeInfo_HomeInfo__33g8W\"};","module.exports = __webpack_public_path__ + \"static/media/home-graphic.b7674fa1.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatusMessages\":\"StatusMessages_StatusMessages__3XZI3\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNav.module.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction MainNav(props) {\n        return (\n            <div className={classes.Nav}>\n                <ul>\n                    <li>\n                        <NavLink activeClassName={classes.selected} to=\"/home\" id=\"home\" className={classes.Link}>\n                            <FontAwesomeIcon icon={[\"fa\", \"home\"]} />\n                        </NavLink> \n                    </li>\n                    <li>\n                        <NavLink\n                        activeClassName={classes.selected}\n                            to=\"/profile\"\n                            id=\"profile\"\n                            className={classes.Link}\n                        >\n                            <FontAwesomeIcon icon={[\"fa\", \"user-cog\"]} />\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink\n                        activeClassName={classes.selected}\n                            to=\"/rooms\"\n                            id=\"rooms\"\n                            className={classes.Link}\n                        >\n                            <FontAwesomeIcon icon={[\"fa\", \"comments\"]} />\n                        </NavLink>\n                    </li>\n                </ul>\n                <div className={classes.themeToggle} title=\"Toggles between Light and Dark mode\" onClick={props.toggleTheme}>   \n                    <FontAwesomeIcon icon={[\"fa\", \"moon\"]} />\n                </div>\n            </div>\n        );\n    }\n\nexport default MainNav;\n","import React, { Component } from 'react';\n\nimport MainNav from './MainNav/MainNav'\n\n\n\nclass Layout extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <MainNav click={this.props.click} toggleTheme={this.props.toggleTheme}/>\n                <main>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    };\n};\n\nexport default Layout;","import React from 'react';\n\nimport { connect } from 'react-redux'\n\nimport classes from './RoomCard.module.css'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst roomCard = (props) => {\n\n    let activeClass = null\n    if (props.connectRoom) {\n        if (props.connectRoom.roomID === props.room.roomID) {\n            activeClass = 'card-selected'\n        }\n    }\n    return (\n                <li title={`Click to join ${props.room.roomName}`} className={`card ${activeClass} ${classes.RoomCard}`} id={props.room.roomID} key={props.room.roomID} onClick={props.clicked} >\n                    <div className=\"card-online-status\"></div>\n                    <FontAwesomeIcon icon={props.room.icon} />\n                    <div className=\"card-info\">\n                        <h3>{props.room.roomName}</h3>\n                        <p>{props.room.numberOnline} Online</p>\n                    </div>\n                    {props.room.private ? <FontAwesomeIcon icon=\"lock\" /> : null}\n                    {props.room.hasSheild ? <FontAwesomeIcon icon=\"shield-alt\" /> : null}\n                </li>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        connectRoom: state.room\n    };\n}\n\nexport default connect(mapStateToProps)(roomCard);\n","import React, { useState } from \"react\";\nimport { connect } from 'react-redux'\n\nimport RoomCard from \"./RoomCard/RoomCard\";\n\nimport classes from \"./RoomNav.module.css\";\nimport '../../../assets/styles/button.css'\nimport '../../../assets/styles/infoBottom.css'\nimport '../../../assets/styles/subButton.css'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"../../../assets/styles/header.css\";\n\nimport addButton from \"../../../assets/images/add-icon.svg\"\n\nfunction RoomNav(props) {\n\n    const [isSectionPublic, setIsSectionPublic] = useState(true) || null;\n\n    let publicRooms = null;\n    let privateRooms = null;\n    if (props.rooms) {\n        publicRooms = props.rooms.filter((item) => item.private === false);\n        privateRooms = props.rooms.filter((item) => item.private === true);\n    }\n\n    let publicRoomsList = null;\n    let privateRoomsList = null;\n\n    if (publicRooms) {\n        publicRoomsList = publicRooms.map((room) => {\n    \n            return (\n                <RoomCard\n                    room={room}\n                    clicked={() => {joinRoom(room)}}\n                    key={room.roomID}\n                />\n            );\n        });\n    }\n\n\n    if (privateRooms) {\n        privateRoomsList = privateRooms.map((room) => {\n            return (\n                <RoomCard\n                    room={room}\n                    clicked={() => {joinRoom(room)} }\n                    key={room.roomID}\n                />\n            );\n        });\n    } else {\n        privateRoomsList=<p>No Private Rooms Available</p>\n    }\n\n\n    function toggleSections(id) {\n        if (id === 'public') {\n            setIsSectionPublic(() => true)\n        } else  {\n            setIsSectionPublic(() => false)\n        }\n    }\n\n    function joinRoom(room) {\n        if (props.room) {\n            if (props.room.roomID !== room.roomID) {\n                props.socket.emit(\"leaveRoom\", null);\n                if (room.private) {\n                    props.joinRoomHandler(null, true, room);\n                } else {\n                    props.socket.emit('joinRoom', room.roomID)\n                }\n            }\n        } else if (!props.room) {\n            if (room.private) {\n                props.joinRoomHandler(null, true, room);\n            } else {\n                props.socket.emit('joinRoom', room.roomID)\n            }\n        }\n    }\n\n\n    function reloadRooms() {\n        props.socket.emit('getRooms', null)\n    }\n\n    const privateInfoMsg = <p className={classes.privateInfoMsg}><FontAwesomeIcon icon='key'/>Private rooms need passwords to enter</p>\n\n    return (\n        <div className={classes.RoomNav}>\n            <div className=\"header\">\n                <h1>Chat Rooms</h1>\n                    <button className={classes.addButton} onClick={props.createRoomHandler}> Create Room <img src={addButton} alt='+'></img> </button>\n            </div>\n            <div className={classes.roomType}>\n                <button onClick={() => toggleSections(\"public\")} className={`${isSectionPublic ? 'buttonActive' : null} button`}><FontAwesomeIcon icon=\"users\" /> Public</button>\n                <button onClick={() => toggleSections(\"private\")} className={`${isSectionPublic ? null : 'buttonActive'} button`}><FontAwesomeIcon icon=\"lock\" /> Private</button>\n            </div>\n            <div className={classes.roomsList}>\n                {!isSectionPublic ? privateInfoMsg : null}\n                <ul className={classes.roomsListElement}>\n                    {isSectionPublic ? publicRoomsList : privateRoomsList}\n                </ul>\n                <div onClick={reloadRooms} className={classes.ReloadIcon} title='Update Rooms'><FontAwesomeIcon icon=\"sync\" /></div>\n            </div>\n            <div className=\"infoBottom\">\n                <FontAwesomeIcon icon=\"shield-alt\" />\n                <p>\n                    Rooms marked with this symbol are static and will never\n                    disappear\n                </p>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        rooms: state.rooms,\n        socket: state.socket,\n        room: state.room\n    };\n}\n\nexport default connect(mapStateToProps)(RoomNav);\n","import React from \"react\";\n\nimport classes from \"../Room.module.css\";\n\nconst message = (props) => {\n    function hideTimeStamp(event) {\n        const timestamp = event.currentTarget.parentNode.lastChild;\n        timestamp.className = \"\";\n    }\n\n    function showTimeStamp(event) {\n        const timestamp = event.currentTarget.parentNode.lastChild;\n        timestamp.className = classes.opacityZero;\n    }\n\n    return (\n        <li\n            className={props.isUser ? classes.messageIsUsers : \"\"}\n        >\n            <div onMouseOut={hideTimeStamp} onMouseOver={showTimeStamp}>\n                <p>{props.user}</p>\n                <p>{props.message}</p>\n            </div>\n            <p>{props.time}</p>\n        </li>\n    );\n};\n\nexport default message;\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Message from \"./Message/Message\";\n\nimport classes from \"./Room.module.css\";\n\nimport \"../../../assets/styles/subButton.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport sendIcon from \"../../../assets/images/send-icon.svg\";\n\nfunction Room(props) {\n\n    let msgList = props.msgs.map((msg) => {\n        return (\n            <Message\n                user={msg.user}\n                message={msg.message}\n                time={msg.time}\n                isUser={msg.isUser}\n                key={msg.key}\n            />\n        );\n    });\n\n    \n\n    let room = (\n        <h2 className={classes.centerInstructions}>\n            Please select a room to join\n        </h2>\n    );\n\n    function SendMsg(event) {\n        event.preventDefault();\n        const text = event.currentTarget[0].value;\n\n        if (text.trim(' ') !== '') {\n            event.currentTarget[0].value = \"\";\n            props.socket.emit(\"sendMessage\", text);\n        }\n    }\n\n    function leaveRoom() {\n        props.socket.emit(\"leaveRoom\", null);\n    }\n\n    useEffect(() => {\n        if (props.room) {\n            scrollToRef(myRef);\n        }\n    })\n\n    const scrollToRef = (ref) => ref.current.scrollIntoView({ behavior: \"smooth\" });\n    const myRef = useRef(null)\n\n\n    if (props.room) {\n        room = (\n            <React.Fragment>\n                <div className={classes.RoomHeader}>\n                    <FontAwesomeIcon icon={props.room.icon} />\n                    <h1>{props.room.roomName}</h1>\n                    <button className={`subButton ${classes.leaveButton}`} onClick={leaveRoom}>\n                        <FontAwesomeIcon icon=\"sign-out-alt\" /> Leave\n                    </button>\n                </div>\n                    <ul className={classes.RoomList}>\n                        {msgList}\n                        <li ref={myRef} className={classes.BottomAnchor}></li>\n                    </ul>\n                <div>\n                    <form onSubmit={SendMsg} className={classes.form}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Type a message here...\"\n                        ></input>\n                        <button type=\"submit\">\n                            <img src={sendIcon} alt=\"Send\"></img>\n                        </button>\n                    </form>\n                </div>\n            </React.Fragment>\n        );\n\n    }\n\n\n    return <div className={classes.Room}>{room}</div>;\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        room: state.room,\n        msgs: state.messages,\n        socket: state.socket,\n    };\n};\n\nexport default connect(mapStateToProps)(Room);\n","import React from 'react';\n\nimport '../../../../assets/styles/card.css'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classes from './OnlineCard.module.css';\n\nfunction OnlineCard(props) {\n\n    return (\n        <li className=\"card\">\n                <div className=\"card-online-status\"></div>\n                <FontAwesomeIcon icon={props.icon} />\n                <div className=\"card-info\">\n                    <h3>{props.name}</h3>\n                </div>\n                {props.inSameRoom ? <FontAwesomeIcon className={classes.inRoom}icon={props.inSameRoom} /> : null }\n        </li>\n    );\n}\n\nexport default OnlineCard;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport OnlineCard from './OnlineCard/OnlineCard'\n\n\nfunction OnlineCards(props) {\n\n    const otherUsers = props.users.map((user) => {\n \n        let inSameRoom = false;\n        if (user.room != null && props.room != null) {\n            if (user.room.roomID === props.room.roomID) {\n                inSameRoom = true\n            }\n        }\n        \n        return (\n            <OnlineCard icon={user.icon || 'user-circle'} name={user.name || 'Guest'} inSameRoom={inSameRoom ? 'door-open' : null} key={Math.random()} />\n        )\n    })\n    \n    return (\n        <React.Fragment>\n            {otherUsers}\n        </React.Fragment>\n    );\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        name: state.name,\n        icon: state.icon,\n        room: state.room,\n        users: state.users\n    };\n}\n\nexport default connect(mapStateToProps)(OnlineCards);\n","import React from \"react\";\nimport { connect } from 'react-redux'\n\nimport classes from \"./OnlineList.module.css\";\n\nimport OnlineCards from \"./OnlineCards/OnlineCards\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport '../../assets/styles/infoBottom.css'\n\nimport \"../../assets/styles/header.css\";\n\nfunction OnlineList(props) {\n    return (\n        <div className={classes.OnlineList}>\n            <div className=\"header\">\n                <h1>Users Online</h1>\n            </div>\n            <ul>\n                <OnlineCards />\n            </ul>\n            <div className=\"infoBottom\">\n                <FontAwesomeIcon icon=\"user-secret\" />\n                <p>Other Hidden Online Users: <span>{props.hiddenUsers}</span></p>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        hiddenUsers: state.hiddenUsers\n    };\n}\n\nexport default connect(mapStateToProps)(OnlineList);\n","import React from \"react\";\n\nimport classes from \"./Backdrop.module.css\";\n\nconst Backdrop = (props) => {\n    return (\n        <React.Fragment>\n            {props.children}\n            <div\n                className={classes.Backdrop}\n                onClick={props.click}\n            ></div>\n        </React.Fragment>\n    );\n};\n\nexport default Backdrop;\n","import React from \"react\";\n\nimport classes from \"./RoomIconList.module.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst listOfIcons = [\n    \"users\",\n    \"coffee\",\n    \"couch\",\n    \"code\",\n    \"gamepad\",\n    \"icons\",\n    \"chess-rook\",\n    \"book\",\n    \"star\",\n    \"biohazard\",\n];\n\nconst RoomIconList = (props) => {\n    const elementList = listOfIcons.map((icon) => (\n        <div\n            className={\n                props.isSelected === icon ? classes.RoomIconListActive : null\n            }\n            onClick={() => props.select(icon)}\n            key={icon}\n        >\n            <FontAwesomeIcon icon={icon} />\n        </div>\n    ));\n\n    return <div className={classes.RoomIconList}>{elementList}</div>;\n};\n\nexport default RoomIconList;\n","import React, { useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Backdrop from \"../../components/Backdrop/Backdrop\";\nimport RoomIconList from \"./RoomIconList/RoomIconList\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classes from \"./CreateRoom.module.css\";\n\nimport \"../../assets/styles/button.css\";\n\nconst CreateRoom = (props) => {\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isPrivate, setIsPrivate] = useState(false);\n    const [selectedIcon, setSelectedIcon] = useState(\"users\");\n\n    const passwordRef = useRef(null);\n\n    function setNameHandler(event) {\n        let name = event.currentTarget.value;\n        setName(name.substr(0, 18));\n    }\n\n    function setPassworHandler(event) {\n        let password = event.currentTarget.value;\n        setPassword(password.substr(0, 18));\n    }\n\n    function selectButton(event, value) {\n        event.preventDefault();\n        setIsPrivate(value);\n        passwordRef.current.disabled = !value;\n    }\n\n    function selectIcon(icon) {\n        setSelectedIcon(icon);\n    }\n\n    function submitNewRoom(event) {\n        event.preventDefault();\n        let newRoom = {\n            icon: selectedIcon,\n            roomName: name,\n            private: isPrivate,\n        };\n\n        console.log(password)\n        props.socket.emit(\"createRoom\", newRoom, password);\n\n        props.createRoomHandler(event, false)\n    }\n\n    return (\n        <Backdrop click={props.createRoomHandler}>\n            <div className={classes.CreateRoom}>\n                <button\n                    className={classes.ClosePopup}\n                    onClick={(e) => props.createRoomHandler(e, false)}\n                >\n                    <FontAwesomeIcon icon=\"times\" />\n                </button>\n                <div className={classes.CreateRoomInfo}>\n                    <h2>Create Room</h2>\n                    <FontAwesomeIcon icon=\"door-open\" />\n                    <p>\n                        Room is not permanent, it will delete after you leave\n                        it. Users can join public rooms and they are visible to\n                        the public. Private rooms are visible to the public but\n                        need a password to enter.\n                    </p>\n                </div>\n                <form>\n                    <div className={classes.CreateRoomInput}>\n                        <div className={classes.controls}>\n                            <div>\n                                <h4>Room Name:</h4>\n                                <h4\n                                    className={\n                                        !isPrivate ? classes.disabledText : null\n                                    }\n                                >\n                                    Room Password:\n                                </h4>\n                                <h4>Type of room:</h4>\n                            </div>\n                            <div>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Type a room name here...\"\n                                    onChange={setNameHandler}\n                                    value={name}\n                                ></input>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Type password here...\"\n                                    onChange={setPassworHandler}\n                                    ref={passwordRef}\n                                    disabled\n                                    value={password}\n                                ></input>\n                                <div className={classes.buttons}>\n                                    <button\n                                        className={`button ${\n                                            !isPrivate ? \"buttonActive\" : null\n                                        }`}\n                                        onClick={(e) => selectButton(e, false)}\n                                    >\n                                        Public\n                                    </button>\n                                    <button\n                                        className={`button ${\n                                            isPrivate ? \"buttonActive\" : null\n                                        }`}\n                                        onClick={(e) => selectButton(e, true)}\n                                    >\n                                        Private\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <RoomIconList\n                            select={selectIcon}\n                            isSelected={selectedIcon}\n                        />\n                        <div className={classes.createRoom}>\n                            <button\n                                className=\"button cancelButton\"\n                                onClick={(e) =>\n                                    props.createRoomHandler(e, false)\n                                }\n                            >\n                                Cancel\n                            </button>\n                            <button className=\"button\" type=\"submit\" onClick={submitNewRoom}>\n                                Create Room\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </Backdrop>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        socket: state.socket,\n    };\n};\n\nexport default connect(mapStateToProps)(CreateRoom);\n","import React, { useState } from 'react';\nimport Backdrop from '../../components/Backdrop/Backdrop';\n\nimport classes from './JoiningRoom.module.css'\n\nimport '../../assets/styles/button.css'\n\nconst JoiningRoom = (props) => {\n\n    const [password, setPassword] = useState(\"\");\n\n    function setPasswordHandler(event) {\n        let newPassword = event.currentTarget.value\n        setPassword(newPassword.substr(0, 18))\n    }\n\n    return (\n        <Backdrop click={props.joinRoomHandler}>\n            <form className={classes.JoiningRoom}>\n                <div>\n                    <h2>Joining Private Room</h2>\n                    <h3>De Boss Room</h3>\n                </div>\n                <div>\n                    <label>Room Password:</label>\n                    <input type=\"text\" placeholder=\"Type password here...\" value={password} onChange={setPasswordHandler}></input>\n                </div>\n                <div>\n                    <button className='button cancelButton' onClick={props.joinRoomHandler}>Cancel</button>\n                    <button className='button' onClick={(event) => props.click(event, password)} type=\"submit\">Join</button>\n                </div>\n            </form>\n        </Backdrop>\n    )\n\n\n};\n\n\nexport default JoiningRoom;","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport RoomNav from \"../../components/Rooms/RoomNav/RoomNav\";\nimport Room from \"../../components/Rooms/Room/Room\";\nimport OnlineList from \"../../components/OnlineList/OnlineList\";\n\nimport CreateRoom from \"../CreateRoom/CreateRoom\";\n\nimport classes from \"./Rooms.module.css\";\nimport JoiningRoom from \"../JoiningRoom/JoiningRoom\";\n\nfunction Rooms(props) {\n    const [creatingRoom, setCreatingRoom] = useState(false);\n    const [joiningRoom, setJoiningRoom] = useState(false);\n    const [roomToJoin, setRoomToJoin] = useState(null);\n\n    function createRoomHandler(e, value) {\n        e.preventDefault();\n        setCreatingRoom(value || !creatingRoom);\n    }\n\n    function joinRoomHandler(e, value, room) {\n        if (e) {\n            e.preventDefault();\n        }\n        setJoiningRoom(value || !joiningRoom);\n        if (room) {\n            setRoomToJoin(room);\n        }\n    }\n\n    function requestJoinRoom(event, password) {\n        event.preventDefault();\n        props.socket.emit(\"joinRoom\", roomToJoin.roomID, password);\n    }\n\n    useEffect(() => {\n        if (props.socket) {\n            props.socket.on(\"successfulJoinPrivateRoom\", () => {\n            setJoiningRoom(false)\n        });\n        }\n    }, [props.socket]);\n\n    return (\n        <div className={classes.Rooms}>\n            {creatingRoom ? (\n                <CreateRoom createRoomHandler={createRoomHandler} />\n            ) : null}\n            {joiningRoom ? (\n                <JoiningRoom\n                    joinRoomHandler={joinRoomHandler}\n                    click={requestJoinRoom}\n                    roomName={roomToJoin.roomName}\n                />\n            ) : null}\n            <RoomNav\n                createRoomHandler={createRoomHandler}\n                joinRoomHandler={joinRoomHandler}\n            />\n            <Room />\n            <OnlineList />\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        socket: state.socket,\n    };\n};\n\nexport default connect(mapStateToProps)(Rooms);\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport classes from './About.module.css'\nimport nateProfile from \"../../../assets/images/nate-profile.png\";\n\nimport \"../../../assets/styles/subButton.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction About() {\n\n    return (\n        <div className={classes.About}>\n            <div className={classes.section}>\n                <div className={classes.info}>\n                    <h2>Our Platform</h2>\n                    <p>A messaging platform that doesn’t store any messages.  Securely chat with your friends using our platform. </p>\n                    <p>Join Public rooms where you can meet new people or talk privately with a few friends in our private rooms.  Private rooms are created with a key and an ID. To join a private room you will need to get the key from someone in a private message.</p>\n                    <p>Our site uses cookies to store you name so when you come back your name will be the same as you left it.  Your name will be temporally stored on the Server until you disconnect.  We store your name to allow other users to view who is currently online.   </p>\n                </div>\n\n            </div>\n            <div className={classes.section}>\n                <img src ={nateProfile} alt=\"Send\" draggable={false}/>\n                <h1>Nate Grift</h1>\n                <div className={classes.links}>\n                    <a href='https://github.com/nategrift/'><FontAwesomeIcon icon={[\"fab\", \"github\"]} /></a>\n                    <a href='https://www.instagram.com/nategrift/'><FontAwesomeIcon icon={[\"fab\", \"instagram\"]} /></a>\n                    <a href='https://www.nategrift.com/'><FontAwesomeIcon icon={[\"fa\", \"globe-americas\"]} /></a>\n                </div>\n                <p>Hello, I created Fanci Chat to test my skills with web development.  The entire website was designed, coded, and created by me.  I created this website as a messaging application that wouldn’t save any messages to any databases.  Everything you send is passed through server but we don’t collect any information about your messages.  We only keep track of accounts for displaying users.  Thank you so much for checking out this chat program. </p>\n\n            </div>\n            \n            <Link to={\"/home\"} className=\"subButton\">Home</Link>\n        </div>\n    );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./HomeInfo.module.css\";\nimport \"../../../assets/styles/subButton.css\";\n\nimport homeGraphic from \"../../../assets/images/home-graphic.png\";\n\nfunction Home(props) {\n    return (\n        <div className={classes.HomeInfo}>\n            <h3>Welcome to</h3>\n            <h1>Fanci Chat</h1>\n            <img src={homeGraphic} alt=\"Send\" draggable={false} />\n            <p>\n                A messaging platform that doesn’t store any messages. Securely\n                chat with your friends\n            </p>\n            <Link to={\"/rooms\"}>Start Messaging</Link>\n\n            <Link to={\"home/about\"} className=\"subButton\">About Us</Link>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\n\n\nimport About from './About/About'\nimport HomeInfo from './HomeInfo/HomeInfo'\n\nfunction Home(props) {\n\n    return (\n        <React.Fragment>\n            <Switch>\n                <Route path={props.match.url + \"/about\"} exact component={About} />\n                <Route path=\"/\" component={HomeInfo} />\n            </Switch>\n        </React.Fragment>\n    );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport classes from './IconList.module.css'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction IconList(props) {\n\n    const iconNames = ['user-circle', 'user-secret', 'user-astronaut', 'user-graduate', 'user-ninja', 'user-tie', 'angry', 'frown', 'meh','poo']\n\n    const icons = iconNames.map((iconName) => {\n        return (\n            <button onClick={props.click} key={iconName} id={iconName} className={`${props.icon === iconName ? classes.active : null} ${classes.Icon} button`}><FontAwesomeIcon icon={iconName} /></button>\n        )\n    })\n\n\n    return (\n        <React.Fragment>\n            {icons}\n        </React.Fragment>\n    );\n}\n\nexport default IconList;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\"\n\nimport OnlineList from \"../../components/OnlineList/OnlineList\";\nimport IconList from \"../../components/Profile/IconList/IconList\"\n\nimport classes from \"./Profile.module.css\";\nimport \"../../assets/styles/header.css\";\nimport \"../../assets/styles/button.css\";\n\nfunction Profile(props) {\n    let isVisable;\n    let isVisableValue = localStorage.getItem('visable') || true;\n\n        if (isVisableValue === 'true' || isVisableValue === true) {\n            isVisable = true\n        } else {\n            isVisable = false\n        }\n\n    const originalName = localStorage.getItem('name') || 'Guest';\n    const originalIcon = localStorage.getItem('icon') || 'user-circle';\n    const originalVisable = isVisable;\n\n\n    const [name, setName] = useState(originalName);\n    const [icon, setIcon] = useState(originalIcon);\n    const [changing, setChanging] = useState(false);\n\n\n    const [visable, setVisable] = useState(originalVisable);\n\n    function updateName(event) {\n        const nameValue = event.currentTarget.value;\n        let newName = nameValue.substr(0, 18)\n        setName(newName);\n        onProfileChange(newName, icon, visable)\n    }\n\n    function updateIcon(event) {\n        setIcon(event.currentTarget.id);\n        onProfileChange(name, event.currentTarget.id, visable)\n    }\n\n    function updateVisable(event) {\n        let isVisable;\n        if (event.currentTarget.id === 'true') {\n            isVisable = true\n        } else {\n            isVisable = false\n        }\n        setVisable(isVisable)\n        onProfileChange(name, icon, isVisable)\n    }\n\n    function onProfileChange(newName, newIcon, newVisable) {\n        if (newName === props.name && newIcon === props.icon && newVisable === props.visable) {\n            setChanging(false)\n        } else {\n            setChanging(true)\n        }\n    }\n\n    return (\n        <div className={classes.Profile}>\n            <div className={classes.editProfile}>\n                <div className=\"header\">\n                    <h1>Edit Profile</h1>\n                </div>\n                <section>\n                    <h2>Edit name:</h2>\n                    <input onChange={updateName} value={name} type='text'/>\n                    <p>Our site uses cookies to store you name so when you come back your name will be the same as you left it.  Your name will be temporally stored on the Server until you disconnect.  We store your name to allow other users to view who is currently online.   </p>\n                </section>\n                <section>\n                    <h2>Profile visable to other users:</h2>\n                    <div>\n                        <button onClick={updateVisable} id='true' className={`${visable ? 'buttonActive' : null} button`}>Visable</button>\n                        <button onClick={updateVisable} id='false' className={`${visable ? null : 'buttonActive'} button` }>Hidden</button>\n                    </div>\n                    <p>If this is turned to Hidden your account name will not be visible in side panel however in the bottom it will display the number of hidden active users.</p>\n                </section>\n                <section>\n                    <h2>Update your Icon:</h2>\n                    <div className={classes.Icons}>\n                        <IconList click={updateIcon} icon={icon}/>\n                    </div>\n                </section>\n                {/* <section>\n                    <h2>How users see you if profile is visable:</h2>\n                </section> */}\n                <section>   \n                    {changing ? <button className={`button ${classes.buttonOpacity}`} onClick={() => {props.clicked(name, icon, visable); setChanging(false)}}>Save</button> : null}\n                </section>\n            </div>\n            <OnlineList />\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        name: state.name,\n        icon: state.icon,\n        visable: state.visable,\n    };\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\n\nimport classes from './StatusMessage.module.css'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst StatusMessage = (props) => {\n\n    let colorClass = null;\n    switch (props.msg.status) {\n        case \"ERROR\":\n            colorClass = classes.error\n            break;\n        case \"SUCCESS\":\n            colorClass = classes.success\n            break;\n        default:\n            colorClass = classes.update\n    }\n    \n    useEffect(() => {\n\n        let contentCancelTransition = setTimeout(function(){ \n            props.removeStatusMessage(props.msg)\n         }, 4000);\n\n        return () => {\n            clearInterval(contentCancelTransition);\n        }\n    }, [])\n\n    function removeMessage() {\n        props.removeStatusMessage(props.msg)\n    }\n\n\n\n    return (\n        <div onClick={removeMessage} className={`${classes.StatusMessage} ${colorClass}`}>\n            <FontAwesomeIcon icon={props.msg.icon}/>\n            <div>\n                <p>{props.msg.title}</p>\n                <p>{props.msg.desc}</p>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        removeStatusMessage: (msg) => dispatch({ type: \"REMOVE_STATE_MESSAGE\", statusMessage: msg}),\n        \n    };\n};\n\nexport default connect(null, mapDispachToProps)(StatusMessage);","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport classes from './StatusMessages.module.css'\n\nimport StatusMessage from './StatusMessage/StatusMessage'\n\nconst StatusMessages = (props) => {\n    \n    return (\n        <div className={classes.StatusMessages}>\n            {props.statusMessages  ? <StatusMessage msg={props.statusMessages } key={Math.random()}/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        statusMessages: state.statusMessages,\n    };\n};\n\nexport default connect(mapStateToProps)(StatusMessages);","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\n\nimport \"./App.css\";\nimport \"./assets/styles/theme.css\";\n\nimport Layout from \"./components/Layout/Layout.js\";\nimport Rooms from \"./containers/Rooms/Rooms.js\";\nimport Home from \"./components/Home/Home.js\";\nimport Profile from \"./containers/Profile/Profile.js\";\nimport StatusMessages from './containers/StatusMessages/StatusMessages'\n\nfunction App(props) {\n    const [currentTheme, setTheme] = useState(\n        localStorage.getItem(\"theme\") || \"dark\"\n    );\n\n    function toggleTheme() {\n        if (currentTheme === \"light\") {\n            setTheme(\"dark\");\n            localStorage.setItem(\"theme\", \"dark\");\n        } else {\n            setTheme(\"light\");\n            localStorage.setItem(\"theme\", \"light\");\n        }\n    }\n\n    useEffect(() => {\n        // const socket = io.connect('http://localhost:3000/', {\n        //     transports: ['websocket'],\n        //     secure: true\n        //  });\n        const socket = io({\n            reconnectionDelay: 3000,\n            reconnectionDelayMax: 10000, \n            reconnectionAttempts: 50,\n        });\n\n        props.updateSocket(socket);\n\n        socket.on(\"connect\", () => {\n            const user = {\n                name: props.name,\n                icon: props.icon,\n                visable: props.visable,\n            };\n            socket.emit(\"createUser\", user);\n            socket.emit(\"getRooms\", null);\n        });\n\n        socket.on(\"statusMsg\", (statusMsg) => {\n            props.addStatusMessage(statusMsg);\n\n        });\n        \n        socket.on(\"connect_failed\", () => {\n    \n            let statusMessage = {\n                title: \"Connection Error\",\n                desc: \"Unable to connect to server\",\n                icon: \"times\",\n                status: \"ERROR\"\n            };\n            props.addStatusMessage(statusMessage);\n\n        });\n\n        socket.on(\"disconnect\", () => {\n            \n            let statusMessage = {\n                title: \"Disconected from server\",\n                desc: \"Reconnecting to server...\",\n                icon: \"bell\",\n                status: \"UPDATE\"\n            };\n\n            props.updateCurrentRoom(null)\n            props.addStatusMessage(statusMessage);\n\n        });\n\n        socket.on(\"reconnect_failed\", () => {\n            \n            let statusMessage = {\n                title: \"Connection Failed\",\n                desc: \"Please try again later\",\n                icon: \"times\",\n                status: \"ERROR\"\n            };\n            props.addStatusMessage(statusMessage);\n\n        });\n\n        socket.on(\"updateUsers\", (users, hiddenUsers) => {\n            props.updateUsers(users, hiddenUsers);\n        });\n\n        socket.on(\"updateUserState\", (user) => {\n            localStorage.setItem(\"name\", user.name);\n            localStorage.setItem(\"icon\", user.icon);\n            localStorage.setItem(\"visable\", user.visable);\n            props.updateCurrentUser(user.name, user.icon, user.visable);\n        });\n\n        socket.on(\"updateRooms\", (rooms) => {\n            props.updateRooms(rooms);\n        });\n\n\n        socket.on(\"joinedRoom\", (room) => {\n            props.updateCurrentRoom(room);\n        });\n\n        socket.on(\"receiveMessage\", (message) => {\n            props.addMessage(message);\n        });\n\n        socket.on(\"leftRoom\", () => {\n            props.leaveRoom();\n            props.clearMessages();\n            socket.emit('getRooms', null);\n        });\n\n        return () => socket.disconnect();\n    }, []);\n\n    function updateProfile(name, icon, visable) {\n        const newUser = {\n            name: name,\n            icon: icon,\n            visable: visable,\n        };\n        props.socket.emit(\"updateUser\", newUser);\n    }\n\n    return (\n        <BrowserRouter>\n            <div className={`App ${currentTheme}`}>\n                <Layout toggleTheme={toggleTheme}>\n                    <StatusMessages />\n                    <Switch>\n                        <Route path=\"/rooms\" component={Rooms} />\n                        <Route\n                            path=\"/profile\"\n                            exact\n                            render={() => <Profile clicked={updateProfile} />}\n                        />\n                        <Route path=\"/home\" component={Home} />\n                        <Redirect from=\"/\" to=\"/home\" />\n                    </Switch>\n                </Layout>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        socket: state.socket,\n        name: state.name,\n        icon: state.icon,\n        visable: state.visable,\n    };\n};\n\nconst mapDispachToProps = (dispatch) => {\n    return {\n        updateSocket: (socket) =>\n            dispatch({ type: \"UPDATE_SOCKET\", socket: socket }),\n        updateUsers: (users, hiddenUsers) =>\n            dispatch({ type: \"UPDATE_USERS\", users: users, hiddenUsers: hiddenUsers }),\n        updateCurrentUser: (name, icon, visable) =>\n            dispatch({\n                type: \"UPDATE_CURRENT_USER\",\n                name: name,\n                icon: icon,\n                visable: visable,\n            }),\n        updateRooms: (rooms) =>\n            dispatch({ type: \"UPDATE_ROOMS\", rooms: rooms }),\n        updateCurrentRoom: (room) =>\n            dispatch({ type: \"UPDATE_CURRENT_ROOM\", room: room }),\n        addMessage: (message) =>\n            dispatch({ type: \"ADD_MESSAGE\", message: message }),\n        clearMessages: () => dispatch({ type: \"CLEAR_MESSAGES\" }),\n        leaveRoom: () => dispatch({ type: \"LEAVE_ROOM\" }),\n        addStatusMessage: (msg) => dispatch({ type: \"ADD_STATUS_MESSAGE\", statusMessage: msg}),\n        \n    };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\nlet isVisable;\nlet isVisableValue = localStorage.getItem('visable') || true;\n\n\n    if (isVisableValue === 'true' || isVisableValue === true) {\n        isVisable = true;\n    } else {\n        isVisable = false;\n    }\n\nconst initialState = {\n    socket: null,\n    name: localStorage.getItem('name') || 'Guest',\n    icon: localStorage.getItem('icon') || 'user-circle',\n    visable: isVisable,\n    room: null,\n    users: [],\n    hiddenUsers: 0,\n    rooms: null,\n    messages: [],\n    statusMessages: null\n}\n\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case 'UPDATE_SOCKET':\n            return {\n                ...state,\n                socket: action.socket\n            }\n        case 'UPDATE_USERS':\n            let newUsers = action.users\n\n            return {\n                ...state,\n                users: newUsers,\n                hiddenUsers: action.hiddenUsers\n            }\n        case 'UPDATE_CURRENT_USER':\n            return {\n                ...state,\n                name: action.name,\n                icon: action.icon,\n                visable: action.visable\n            }\n        case 'UPDATE_ROOMS':\n            return {\n                ...state,\n                rooms: action.rooms\n            }\n        case 'UPDATE_CURRENT_ROOM':\n            return {\n                ...state,\n                room: action.room\n            }\n        case 'ADD_MESSAGE':\n            let updatedMessages = [...state.messages];\n            updatedMessages.push(action.message)\n            return {\n                ...state,\n                messages: updatedMessages\n            }\n        case 'LEAVE_ROOM':\n            return {\n                ...state,\n                room: null\n            }\n        case 'CLEAR_MESSAGES':\n            let emptyArray = [];\n            return {\n                ...state,\n                messages: emptyArray\n            }\n        case 'ADD_STATUS_MESSAGE':\n            return {\n                ...state,\n                statusMessages: action.statusMessage\n            }\n        case 'REMOVE_STATE_MESSAGE':\n            // let removedMsgState = state.statusMessages.filter((msg) => \n            //     msg !== action.statusMessage\n            // )\n            return {\n                ...state,\n                statusMessages: null\n        }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer'\nimport { Provider } from 'react-redux'\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    faHome,\n    faComments,\n    faUserCog,\n    faMoon,\n    faUsers,\n    faLock,\n    faShieldAlt,\n    faIcons,\n    faGamepad,\n    faBook,\n    faSignOutAlt,\n    faGlobeAmericas,\n    faUserCircle,\n    faUserSecret,\n    faUserAstronaut,\n    faUserGraduate,\n    faUserNinja,\n    faAngry,\n    faUserTie,\n    faMeh,\n    faFrown,\n    faPoo,\n    faSync,\n    faDoorOpen,\n    faCheck,\n    faBell,\n    faTimes,\n    faKey,\n    faCoffee,\n    faCouch,\n    faCode,\n    faChessRook,\n    faStar,\n    faBiohazard,\n    faDoorClosed\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  faGithub,\n  faInstagram\n} from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(\n    faHome,\n    faComments,\n    faUserCog,\n    faMoon,\n    faUsers,\n    faLock,\n    faShieldAlt,\n    faIcons,\n    faGamepad,\n    faBook,\n    faSignOutAlt,\n    faGithub,\n    faInstagram,\n    faGlobeAmericas,\n    faUserCircle,\n    faUserSecret,\n    faUserAstronaut,\n    faUserGraduate,\n    faUserNinja,\n    faAngry,\n    faUserTie,\n    faMeh,\n    faPoo,\n    faFrown,\n    faSync,\n    faDoorOpen,\n    faCheck,\n    faBell,\n    faTimes,\n    faKey,\n    faCoffee,\n    faCouch,\n    faCode,\n    faChessRook,\n    faStar,\n    faBiohazard,\n    faDoorClosed\n\n\n\n\n\n\n\n);\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}